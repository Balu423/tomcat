#####################################################################
build vms
#####################################################################
# clone project
git clone -b swarm-weave \
  --single-branch https://github.com/garystafford/spring-music-docker.git && 
cd spring-music-docker

for i in {1..3}
do
  docker-machine \
    create \
    --driver virtualbox --virtualbox-disk-size 8000 \
    --virtualbox-memory 512 \
    weave-node-0${i} --debug
done

docker info

# create diectory to store mongo data on host
docker-machine ssh swarm-node-03 mkdir /opt/mongodb

#####################################################################
weave
#####################################################################

tlsargs=$(docker-machine ssh weave-node-01 \
  "cat /proc/\$(pgrep /usr/local/bin/docker)/cmdline | tr '\0' '\n' | grep ^--tls | tr '\n' ' '")

sudo curl -L git.io/weave -o /usr/local/bin/weave && \
sudo chmod a+x /usr/local/bin/weave

eval "$(docker-machine env weave-node-01)" && \
weave launch && \
weave launch-proxy $tlsargs

for i in {2..3}
do
  eval "$(docker-machine env weave-node-0${i})" && \
  weave launch --init-peer-count 3 && \
  weave launch-proxy $tlsargs && \
  weave connect $(docker-machine ip weave-node-01)
done

weave status


#####################################################################
Build Containers
#####################################################################
# set environment
docker-machine env --swarm swarm-master && \
eval "$(docker-machine env --swarm swarm-master)"

#optional pre-pull images
docker pull garystafford/spring-music-docker-mongo
docker pull garystafford/spring-music-docker-nginx
docker pull garystafford/spring-music-docker-tomcat

# build (1) NGINX and (3) Tomcat containers
docker-compose -f docker-compose-swarm.yml -p music up -d
docker-compose -f docker-compose-swarm.yml -p music scale app=3 up -d

# manually configure NGINX load-balancing pool
# TODO: need to add Consul/Consul Template to automate this step!!!
# add (3) Tomcat servers to 'upstream backend' section of default.conf
# for example:
# upstream backend {
#   ip_hash;
#   server music_app_1:8080;
#   server music_app_2:8080;
#   server music_app_3:8080;
# }

# note dns:port of all app containers (Tomcat)
docker ps -a

docker exec -it twcnip_proxy_1 bash
cd /tmp && sh build_nginx_conf_production.sh
nano /etc/nginx/conf.d/default.conf
nginx -s reload # just reload NGINX config
# ctrl p, ctrl q to exit container

# configure local DNS resolution for application URL
echo "$(docker-machine ip swarm-node-01)  prod.companynews.com" | sudo tee --append /etc/hosts

# test by cURLing the website
curl -v prod.companynews.com # see page source
curl -I -X GET --url prod.companynews.com # see header with routing



docker-machine start swarm-node-04 swarm-node-03 swarm-node-02 swarm-node-01 swarm-master



# shouldn't need ip:new port if weave dns is working
#   server 192.168.99.102:32768;
#   server 192.168.99.103:32769;
#   server 192.168.99.102:32770;
